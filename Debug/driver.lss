
driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000032c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae1  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000072c  00000000  00000000  00000ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000605  00000000  00000000  00001605  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  00001c0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f0  00000000  00000000  00001cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000037b  00000000  00000000  000020c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002443  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 0c 01 	call	0x218	; 0x218 <main>
  64:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <putton_value>:
#define F_CPU 16000000
#include <util/delay.h>
Uint8 putton_value(void)
{
	Uint8 putton=0;
	putton=Get_Bit(PIND,2);
  6c:	80 b3       	in	r24, 0x10	; 16
  6e:	82 fb       	bst	r24, 2
  70:	88 27       	eor	r24, r24
  72:	80 f9       	bld	r24, 0
	while(Get_Bit(PIND,2));
  74:	82 99       	sbic	0x10, 2	; 16
  76:	fe cf       	rjmp	.-4      	; 0x74 <putton_value+0x8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  78:	ef e3       	ldi	r30, 0x3F	; 63
  7a:	fc e9       	ldi	r31, 0x9C	; 156
  7c:	31 97       	sbiw	r30, 0x01	; 1
  7e:	f1 f7       	brne	.-4      	; 0x7c <putton_value+0x10>
  80:	00 c0       	rjmp	.+0      	; 0x82 <putton_value+0x16>
  82:	00 00       	nop
	_delay_ms(10);
	return putton;
  84:	08 95       	ret

00000086 <DIO_SetPortDir>:
	break;
	case DIO_PORTC :
	*val=Get_Bit(PINC,pin);
	break;
	case DIO_PORTD :
	*val=Get_Bit(PIND,pin);
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	41 f0       	breq	.+16     	; 0x9a <DIO_SetPortDir+0x14>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_SetPortDir+0x10>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	39 f0       	breq	.+14     	; 0x9e <DIO_SetPortDir+0x18>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	39 f0       	breq	.+14     	; 0xa2 <DIO_SetPortDir+0x1c>
  94:	08 95       	ret
  96:	6a bb       	out	0x1a, r22	; 26
  98:	08 95       	ret
  9a:	67 bb       	out	0x17, r22	; 23
  9c:	08 95       	ret
  9e:	64 bb       	out	0x14, r22	; 20
  a0:	08 95       	ret
  a2:	61 bb       	out	0x11, r22	; 17
  a4:	08 95       	ret

000000a6 <DIO_SetBinDir>:
  a6:	44 23       	and	r20, r20
  a8:	d9 f1       	breq	.+118    	; 0x120 <DIO_SetBinDir+0x7a>
  aa:	41 30       	cpi	r20, 0x01	; 1
  ac:	09 f0       	breq	.+2      	; 0xb0 <DIO_SetBinDir+0xa>
  ae:	6f c0       	rjmp	.+222    	; 0x18e <DIO_SetBinDir+0xe8>
  b0:	81 30       	cpi	r24, 0x01	; 1
  b2:	91 f0       	breq	.+36     	; 0xd8 <DIO_SetBinDir+0x32>
  b4:	28 f0       	brcs	.+10     	; 0xc0 <DIO_SetBinDir+0x1a>
  b6:	82 30       	cpi	r24, 0x02	; 2
  b8:	d9 f0       	breq	.+54     	; 0xf0 <DIO_SetBinDir+0x4a>
  ba:	83 30       	cpi	r24, 0x03	; 3
  bc:	29 f1       	breq	.+74     	; 0x108 <DIO_SetBinDir+0x62>
  be:	30 c0       	rjmp	.+96     	; 0x120 <DIO_SetBinDir+0x7a>
  c0:	2a b3       	in	r18, 0x1a	; 26
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	06 2e       	mov	r0, r22
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_SetBinDir+0x28>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	0a 94       	dec	r0
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_SetBinDir+0x24>
  d2:	82 2b       	or	r24, r18
  d4:	8a bb       	out	0x1a, r24	; 26
  d6:	2c c0       	rjmp	.+88     	; 0x130 <DIO_SetBinDir+0x8a>
  d8:	27 b3       	in	r18, 0x17	; 23
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	06 2e       	mov	r0, r22
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <DIO_SetBinDir+0x40>
  e2:	88 0f       	add	r24, r24
  e4:	99 1f       	adc	r25, r25
  e6:	0a 94       	dec	r0
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <DIO_SetBinDir+0x3c>
  ea:	82 2b       	or	r24, r18
  ec:	87 bb       	out	0x17, r24	; 23
  ee:	2c c0       	rjmp	.+88     	; 0x148 <DIO_SetBinDir+0xa2>
  f0:	24 b3       	in	r18, 0x14	; 20
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	06 2e       	mov	r0, r22
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_SetBinDir+0x58>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	0a 94       	dec	r0
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_SetBinDir+0x54>
 102:	82 2b       	or	r24, r18
 104:	84 bb       	out	0x14, r24	; 20
 106:	2c c0       	rjmp	.+88     	; 0x160 <DIO_SetBinDir+0xba>
 108:	21 b3       	in	r18, 0x11	; 17
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	06 2e       	mov	r0, r22
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_SetBinDir+0x70>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	0a 94       	dec	r0
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_SetBinDir+0x6c>
 11a:	82 2b       	or	r24, r18
 11c:	81 bb       	out	0x11, r24	; 17
 11e:	2c c0       	rjmp	.+88     	; 0x178 <DIO_SetBinDir+0xd2>
 120:	81 30       	cpi	r24, 0x01	; 1
 122:	91 f0       	breq	.+36     	; 0x148 <DIO_SetBinDir+0xa2>
 124:	28 f0       	brcs	.+10     	; 0x130 <DIO_SetBinDir+0x8a>
 126:	82 30       	cpi	r24, 0x02	; 2
 128:	d9 f0       	breq	.+54     	; 0x160 <DIO_SetBinDir+0xba>
 12a:	83 30       	cpi	r24, 0x03	; 3
 12c:	81 f5       	brne	.+96     	; 0x18e <DIO_SetBinDir+0xe8>
 12e:	24 c0       	rjmp	.+72     	; 0x178 <DIO_SetBinDir+0xd2>
 130:	2a b3       	in	r18, 0x1a	; 26
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_SetBinDir+0x96>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_SetBinDir+0x92>
 140:	80 95       	com	r24
 142:	82 23       	and	r24, r18
 144:	8a bb       	out	0x1a, r24	; 26
 146:	08 95       	ret
 148:	27 b3       	in	r18, 0x17	; 23
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_SetBinDir+0xae>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_SetBinDir+0xaa>
 158:	80 95       	com	r24
 15a:	82 23       	and	r24, r18
 15c:	87 bb       	out	0x17, r24	; 23
 15e:	08 95       	ret
 160:	24 b3       	in	r18, 0x14	; 20
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_SetBinDir+0xc6>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_SetBinDir+0xc2>
 170:	80 95       	com	r24
 172:	82 23       	and	r24, r18
 174:	84 bb       	out	0x14, r24	; 20
 176:	08 95       	ret
 178:	21 b3       	in	r18, 0x11	; 17
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_SetBinDir+0xde>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_SetBinDir+0xda>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	81 bb       	out	0x11, r24	; 17
 18e:	08 95       	ret

00000190 <DIO_WritePort>:
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	41 f0       	breq	.+16     	; 0x1a4 <DIO_WritePort+0x14>
 194:	28 f0       	brcs	.+10     	; 0x1a0 <DIO_WritePort+0x10>
 196:	82 30       	cpi	r24, 0x02	; 2
 198:	39 f0       	breq	.+14     	; 0x1a8 <DIO_WritePort+0x18>
 19a:	83 30       	cpi	r24, 0x03	; 3
 19c:	39 f0       	breq	.+14     	; 0x1ac <DIO_WritePort+0x1c>
 19e:	08 95       	ret
 1a0:	6b bb       	out	0x1b, r22	; 27
 1a2:	08 95       	ret
 1a4:	68 bb       	out	0x18, r22	; 24
 1a6:	08 95       	ret
 1a8:	65 bb       	out	0x15, r22	; 21
 1aa:	08 95       	ret
 1ac:	62 bb       	out	0x12, r22	; 18
 1ae:	08 95       	ret

000001b0 <DIO_ToggelPin>:
}
}

void DIO_ToggelPin(Uint8 port,Uint8 pin)
{
	switch(port)
 1b0:	81 30       	cpi	r24, 0x01	; 1
 1b2:	89 f0       	breq	.+34     	; 0x1d6 <DIO_ToggelPin+0x26>
 1b4:	28 f0       	brcs	.+10     	; 0x1c0 <DIO_ToggelPin+0x10>
 1b6:	82 30       	cpi	r24, 0x02	; 2
 1b8:	c9 f0       	breq	.+50     	; 0x1ec <DIO_ToggelPin+0x3c>
 1ba:	83 30       	cpi	r24, 0x03	; 3
 1bc:	11 f1       	breq	.+68     	; 0x202 <DIO_ToggelPin+0x52>
 1be:	08 95       	ret
	{
	case DIO_PORTA :
	Toggle_Bit(PORTA,pin);
 1c0:	2b b3       	in	r18, 0x1b	; 27
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_ToggelPin+0x1c>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_ToggelPin+0x18>
 1d0:	82 27       	eor	r24, r18
 1d2:	8b bb       	out	0x1b, r24	; 27
	break;
 1d4:	08 95       	ret
	case DIO_PORTB :
	Toggle_Bit(PORTB,pin);
 1d6:	28 b3       	in	r18, 0x18	; 24
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_ToggelPin+0x32>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_ToggelPin+0x2e>
 1e6:	82 27       	eor	r24, r18
 1e8:	88 bb       	out	0x18, r24	; 24
	break;
 1ea:	08 95       	ret
	case DIO_PORTC :
	Toggle_Bit(PORTC,pin);
 1ec:	25 b3       	in	r18, 0x15	; 21
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_ToggelPin+0x48>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_ToggelPin+0x44>
 1fc:	82 27       	eor	r24, r18
 1fe:	85 bb       	out	0x15, r24	; 21
	break;
 200:	08 95       	ret
	case DIO_PORTD :
	Toggle_Bit(PORTD,pin);
 202:	22 b3       	in	r18, 0x12	; 18
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_ToggelPin+0x5e>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	6a 95       	dec	r22
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_ToggelPin+0x5a>
 212:	82 27       	eor	r24, r18
 214:	82 bb       	out	0x12, r24	; 18
 216:	08 95       	ret

00000218 <main>:
//Uint8 putton_value(void);
#define F_CPU 16000000
#include <util/delay.h>
int main(void)
{
    DIO_SetPortDir(DIO_PORTA,PORT_OUTPUT);
 218:	6f ef       	ldi	r22, 0xFF	; 255
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	0e 94 43 00 	call	0x86	; 0x86 <DIO_SetPortDir>
	DIO_SetBinDir(DIO_PORTB,DIO_PIN2,PORT_OUTPUT);
 220:	4f ef       	ldi	r20, 0xFF	; 255
 222:	62 e0       	ldi	r22, 0x02	; 2
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	0e 94 53 00 	call	0xa6	; 0xa6 <DIO_SetBinDir>
	DIO_SetBinDir(DIO_PORTB,DIO_PIN0,PORT_INPUT);
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	60 e0       	ldi	r22, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	0e 94 53 00 	call	0xa6	; 0xa6 <DIO_SetBinDir>
	DIO_WritePort(DIO_PORTB , 0x02);
 234:	62 e0       	ldi	r22, 0x02	; 2
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_WritePort>
	Uint8 count=9;
 23c:	c9 e0       	ldi	r28, 0x09	; 9
    while(1)
    {
	    if(putton_value())
 23e:	0e 94 36 00 	call	0x6c	; 0x6c <putton_value>
 242:	88 23       	and	r24, r24
 244:	e1 f3       	breq	.-8      	; 0x23e <main+0x26>
		{
		    DIO_WritePort(DIO_PORTA , (count << 4));
 246:	6c 2f       	mov	r22, r28
 248:	62 95       	swap	r22
 24a:	60 7f       	andi	r22, 0xF0	; 240
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_WritePort>
			
			if(count==0)
 252:	c1 11       	cpse	r28, r1
 254:	1b c0       	rjmp	.+54     	; 0x28c <main+0x74>
			{
				DIO_ToggelPin(DIO_PORTA,DIO_PIN3);
 256:	63 e0       	ldi	r22, 0x03	; 3
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <DIO_ToggelPin>
 25e:	2f ef       	ldi	r18, 0xFF	; 255
 260:	84 e3       	ldi	r24, 0x34	; 52
 262:	9c e0       	ldi	r25, 0x0C	; 12
 264:	21 50       	subi	r18, 0x01	; 1
 266:	80 40       	sbci	r24, 0x00	; 0
 268:	90 40       	sbci	r25, 0x00	; 0
 26a:	e1 f7       	brne	.-8      	; 0x264 <main+0x4c>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <main+0x56>
 26e:	00 00       	nop
				_delay_ms(250);
				DIO_ToggelPin(DIO_PORTA,DIO_PIN3);
 270:	63 e0       	ldi	r22, 0x03	; 3
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <DIO_ToggelPin>
 278:	2f ef       	ldi	r18, 0xFF	; 255
 27a:	84 e3       	ldi	r24, 0x34	; 52
 27c:	9c e0       	ldi	r25, 0x0C	; 12
 27e:	21 50       	subi	r18, 0x01	; 1
 280:	80 40       	sbci	r24, 0x00	; 0
 282:	90 40       	sbci	r25, 0x00	; 0
 284:	e1 f7       	brne	.-8      	; 0x27e <main+0x66>
 286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x70>
 288:	00 00       	nop
				_delay_ms(250);
				count=9;
 28a:	c9 e0       	ldi	r28, 0x09	; 9
			}
			count--;
 28c:	c1 50       	subi	r28, 0x01	; 1
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	89 e6       	ldi	r24, 0x69	; 105
 292:	98 e1       	ldi	r25, 0x18	; 24
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x7c>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x86>
 29e:	00 00       	nop
 2a0:	ce cf       	rjmp	.-100    	; 0x23e <main+0x26>

000002a2 <_exit>:
 2a2:	f8 94       	cli

000002a4 <__stop_program>:
 2a4:	ff cf       	rjmp	.-2      	; 0x2a4 <__stop_program>
